package ServicesProjectMPR;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;


import MPR.Osoba;



public class OsobaDBM {
	
	private Connection conn;
	private Statement StworzTabele;
	private PreparedStatement DodajOsobeStmt;
	private PreparedStatement PobierzOsobyStmt;
	private PreparedStatement ZnajdzOsobeStmt;
	private PreparedStatement UsunOsobeStmt;
	private PreparedStatement UsunWszystkieOsobyStmt;
	 

  public OsobaDBM(){
	  
	  try {
		  conn = DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/workdb");
		  StworzTabele = conn.createStatement();
		  ResultSet wynik =conn.getMetaData().getTables(null, null, null, null);
		  boolean OsobyTableExists=false;
		  while(wynik.next())
		  {
		  if("Osoby".equalsIgnoreCase(wynik.getString("Table_Name")))
		  {
		  OsobyTableExists=true;
		  break;
		  }
		  }
		  if(!OsobyTableExists)
		  {
		  StworzTabele.executeUpdate("" +
		  "CREATE TABLE Osoby(" +
		  "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY," +
		  "osoba_nr Integer,imie varchar(25),"+
		  "" +"nazwisko varchar (50)" + "" +
		  ")");
		  }

		  DodajOsobeStmt = conn.prepareStatement("INSERT INTO Osoby (imie, nazwisko) VALUES (?, ?)");
		  PobierzOsobyStmt = conn.prepareStatement("SELECT * FROM Osoby");
		  ZnajdzOsobeStmt = conn.prepareStatement("SELECT * FROM Osoby WHERE nazwisko = ?");       
          UsunOsobeStmt = conn.prepareStatement("DELETE FROM Osoby WHERE ID = ?");
          UsunWszystkieOsobyStmt = conn.prepareStatement("DELETE FROM Osoby");


		  } catch (SQLException e) {

		  e.printStackTrace();
		  }
		  }

  public void DodajOsobe (Osoba o) {
	  try
	  {
	  DodajOsobeStmt.setString(1, o.getImie());
	  DodajOsobeStmt.setString(2, o.getNazwisko());
	  DodajOsobeStmt.executeUpdate();
	  }
	  catch (SQLException e)
	  	{

	  e.printStackTrace();
	  	}

	  }
  public List<Osoba> PobierzOsoby(){
	  List<Osoba> osoby =new ArrayList<Osoba>();

	  try {
	  ResultSet wynik = PobierzOsobyStmt.executeQuery();

	  while(wynik.next())
	  	{
	  osoby.add(new Osoba(wynik.getString("imie"),wynik.getString("nazwisko")));
	  	}
	  } 
	  
	  catch (SQLException e) {

	  e.printStackTrace();
	  }

	  return osoby;
	  }
  public List<Integer> ZnajdzOsobe (String nazwisko) {
	  try {
	  List<Integer> znaleziony = new ArrayList<Integer>();
	  ZnajdzOsobeStmt.setString(1, nazwisko);
	  ResultSet wynik = ZnajdzOsobeStmt.executeQuery();
	  while (wynik.next())
	  znaleziony.add(wynik.getInt("ID"));
	  return znaleziony;
	  	} 
	  catch (SQLException e) {
	  e.printStackTrace();
	  	}
	  return null;
	  }
  public void UsunOsobe(List<Integer> osoby) {
	  try {
	  for (Integer id : osoby) {
	  UsunOsobeStmt.setInt(1, id);
	  UsunOsobeStmt.executeUpdate();
	  	}
	  } 
	  catch (SQLException e) {
	  e.printStackTrace();
	  	}
	  }
  public void UsunWszystkieOsoby() {
	  try {
	  UsunWszystkieOsobyStmt.executeUpdate();
	  	}
	  catch (SQLException e)
	  	{
	  e.printStackTrace();
	  }
	}
  }
